// <auto-generated />
using System;
using DDDSample1.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DDDNetCore.Migrations
{
    [DbContext(typeof(DDDSample1DbContext))]
    [Migration("20210110165437_VehicleDutyName")]
    partial class VehicleDutyName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("DDDSample1.Domain.Drivers.Driver", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("birthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("cc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("driverTypes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("finalDateCompany")
                        .HasColumnType("datetime2");

                    b.Property<string>("mecNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("nif")
                        .HasColumnType("int");

                    b.Property<DateTime>("startDateCompany")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("cc")
                        .IsUnique()
                        .HasFilter("[cc] IS NOT NULL");

                    b.HasIndex("mecNumber")
                        .IsUnique();

                    b.HasIndex("nif")
                        .IsUnique()
                        .HasFilter("[nif] IS NOT NULL");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("DDDSample1.Domain.Trips.Trip", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("isGenerated")
                        .HasColumnType("bit");

                    b.Property<int>("path")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("DDDSample1.Domain.Users.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("nif")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("telephone")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("email")
                        .IsUnique()
                        .HasFilter("[email] IS NOT NULL");

                    b.HasIndex("nif")
                        .IsUnique()
                        .HasFilter("[nif] IS NOT NULL");

                    b.HasIndex("telephone")
                        .IsUnique()
                        .HasFilter("[telephone] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DDDSample1.Domain.VehicleDuties.VehicleDuty", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("duration")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("validDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("code")
                        .IsUnique()
                        .HasFilter("[code] IS NOT NULL");

                    b.HasIndex("name")
                        .IsUnique()
                        .HasFilter("[name] IS NOT NULL");

                    b.ToTable("VehicleDuties");
                });

            modelBuilder.Entity("DDDSample1.Domain.Vehicles.Vehicle", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("VIN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("licensePlate")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("startDateService")
                        .HasColumnType("datetime2");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("VIN")
                        .IsUnique()
                        .HasFilter("[VIN] IS NOT NULL");

                    b.HasIndex("licensePlate")
                        .IsUnique()
                        .HasFilter("[licensePlate] IS NOT NULL");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("DDDSample1.Domain.WorkBlocks.WorkBlock", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("endInstant")
                        .HasColumnType("datetime2");

                    b.Property<string>("key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("startInstant")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("key")
                        .IsUnique()
                        .HasFilter("[key] IS NOT NULL");

                    b.ToTable("WorkBlocks");
                });

            modelBuilder.Entity("DDDSample1.Domain.Drivers.Driver", b =>
                {
                    b.OwnsOne("DDDSample1.Domain.Drivers.DriverLicense", "driverLicense", b1 =>
                        {
                            b1.Property<string>("DriverId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<DateTime>("emissionDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("licenseNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("DriverId");

                            b1.ToTable("Drivers");

                            b1.WithOwner()
                                .HasForeignKey("DriverId");
                        });

                    b.Navigation("driverLicense");
                });

            modelBuilder.Entity("DDDSample1.Domain.Trips.Trip", b =>
                {
                    b.OwnsOne("DDDSample1.Domain.Trips.LineName", "line", b1 =>
                        {
                            b1.Property<string>("TripId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("lineName")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("TripId");

                            b1.ToTable("Trips");

                            b1.WithOwner()
                                .HasForeignKey("TripId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Trips.Orientation", "orientation", b1 =>
                        {
                            b1.Property<string>("TripId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("orientation")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("TripId");

                            b1.ToTable("Trips");

                            b1.WithOwner()
                                .HasForeignKey("TripId");
                        });

                    b.OwnsOne("DDDSample1.Domain.Trips.TripNumber", "tripNumber", b1 =>
                        {
                            b1.Property<string>("TripId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("key")
                                .HasColumnType("int");

                            b1.HasKey("TripId");

                            b1.ToTable("Trips");

                            b1.WithOwner()
                                .HasForeignKey("TripId");
                        });

                    b.OwnsMany("DDDSample1.Domain.Trips.TripPassingTime", "passingTimes", b1 =>
                        {
                            b1.Property<string>("Id")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("TripId")
                                .IsRequired()
                                .HasColumnType("nvarchar(450)");

                            b1.Property<bool>("isReliefPoint")
                                .HasColumnType("bit");

                            b1.Property<bool>("isUsed")
                                .HasColumnType("bit");

                            b1.Property<string>("nodeName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("number")
                                .HasColumnType("int");

                            b1.Property<int>("time")
                                .HasColumnType("int");

                            b1.HasKey("Id");

                            b1.HasIndex("TripId");

                            b1.ToTable("TripPassingTime");

                            b1.WithOwner()
                                .HasForeignKey("TripId");
                        });

                    b.Navigation("line");

                    b.Navigation("orientation");

                    b.Navigation("passingTimes");

                    b.Navigation("tripNumber");
                });

            modelBuilder.Entity("DDDSample1.Domain.VehicleDuties.VehicleDuty", b =>
                {
                    b.OwnsMany("DDDSample1.Domain.WorkBlocks.WorkBlockKey", "workBlocks", b1 =>
                        {
                            b1.Property<string>("VehicleDutyId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .UseIdentityColumn();

                            b1.Property<string>("key")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("VehicleDutyId", "Id");

                            b1.ToTable("WorkBlockKey");

                            b1.WithOwner()
                                .HasForeignKey("VehicleDutyId");
                        });

                    b.Navigation("workBlocks");
                });

            modelBuilder.Entity("DDDSample1.Domain.WorkBlocks.WorkBlock", b =>
                {
                    b.OwnsMany("DDDSample1.Domain.Trips.TripNumber", "trips", b1 =>
                        {
                            b1.Property<string>("WorkBlockId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .UseIdentityColumn();

                            b1.Property<int>("key")
                                .HasColumnType("int");

                            b1.HasKey("WorkBlockId", "Id");

                            b1.ToTable("WorkBlocks_trips");

                            b1.WithOwner()
                                .HasForeignKey("WorkBlockId");
                        });

                    b.Navigation("trips");
                });
#pragma warning restore 612, 618
        }
    }
}
